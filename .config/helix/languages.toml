[language-server.pyright]
command = "pyright-langserver"
args = ["--stdio"]

[language-server.pyright.config]
python.analysis.lint = true
python.analysis.inlayHint.enable = true
python.analysis.autoSearchPaths = true
python.analysis.diagnosticMode = "workspace"
python.analysis.useLibraryCodeForType = true
python.analysis.logLevel = "Error"
python.analysis.typeCheckingMode = "strict"
python.analysis.autoImportCompletions = true

[language-server.ruff]
command = "ruff"
args = ["server", "-q", "--preview"] 
environment = { "RUFF_TRACE" = "messages" }

[language-server.ruff.config.settings]
lineLength = 79
logLevel = "debug"

[language-server.ruff.config.settings.lint]
select = ["E", "F", "W", "B", "I", "RUF", "N", "LOG", "ERA", "W", "UP", "ANN", "ASYNC", "S", "RET", "TCH", "ARG", "PTH"]
preview = true

[language-server.ruff.config.settings.format]
preview = true
quote-style = "double"
docstring-code-format = true
indent-style = "space"

[[language]]
name = "python"
scope = "source.python"
injection-regex = "python"
file-types = ["py", "pyi", "py3", "pyw", "ptl", "rpy", "cpy", "ipy", "pyt", { glob = ".python_history" }, { glob = ".pythonstartup" }, { glob = ".pythonrc" }, { glob = "SConstruct" }, { glob = "SConscript" }]
shebangs = ["python"]
roots = ["pyproject.toml", "setup.py", "poetry.lock", "requirements.txt"]
comment-token = "#"
language-servers = ["pyright", "ruff"]
indent = { tab-width = 4, unit = "    " }
auto-format = true
formatter = { command = "bash", args = ["-c", "ruff check --fix --select I --quiet - | ruff format -"] }
